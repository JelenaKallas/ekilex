/*
 * This file is generated by jOOQ.
 */
package eki.wordweb.data.db.tables;


import eki.wordweb.data.db.Indexes;
import eki.wordweb.data.db.Public;
import eki.wordweb.data.db.tables.records.MviewWwWordEtymologyRecord;
import eki.wordweb.data.db.udt.records.TypeWordEtymRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.9"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class MviewWwWordEtymology extends TableImpl<MviewWwWordEtymologyRecord> {

    private static final long serialVersionUID = 1505575429;

    /**
     * The reference instance of <code>public.mview_ww_word_etymology</code>
     */
    public static final MviewWwWordEtymology MVIEW_WW_WORD_ETYMOLOGY = new MviewWwWordEtymology();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<MviewWwWordEtymologyRecord> getRecordType() {
        return MviewWwWordEtymologyRecord.class;
    }

    /**
     * The column <code>public.mview_ww_word_etymology.word_id</code>.
     */
    public final TableField<MviewWwWordEtymologyRecord, Long> WORD_ID = createField("word_id", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>public.mview_ww_word_etymology.word_sources</code>.
     */
    public final TableField<MviewWwWordEtymologyRecord, String[]> WORD_SOURCES = createField("word_sources", org.jooq.impl.SQLDataType.CLOB.getArrayDataType(), this, "");

    /**
     * The column <code>public.mview_ww_word_etymology.etym_lineup</code>.
     */
    public final TableField<MviewWwWordEtymologyRecord, TypeWordEtymRecord[]> ETYM_LINEUP = createField("etym_lineup", eki.wordweb.data.db.udt.TypeWordEtym.TYPE_WORD_ETYM.getDataType().getArrayDataType(), this, "");

    /**
     * Create a <code>public.mview_ww_word_etymology</code> table reference
     */
    public MviewWwWordEtymology() {
        this(DSL.name("mview_ww_word_etymology"), null);
    }

    /**
     * Create an aliased <code>public.mview_ww_word_etymology</code> table reference
     */
    public MviewWwWordEtymology(String alias) {
        this(DSL.name(alias), MVIEW_WW_WORD_ETYMOLOGY);
    }

    /**
     * Create an aliased <code>public.mview_ww_word_etymology</code> table reference
     */
    public MviewWwWordEtymology(Name alias) {
        this(alias, MVIEW_WW_WORD_ETYMOLOGY);
    }

    private MviewWwWordEtymology(Name alias, Table<MviewWwWordEtymologyRecord> aliased) {
        this(alias, aliased, null);
    }

    private MviewWwWordEtymology(Name alias, Table<MviewWwWordEtymologyRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> MviewWwWordEtymology(Table<O> child, ForeignKey<O, MviewWwWordEtymologyRecord> key) {
        super(child, key, MVIEW_WW_WORD_ETYMOLOGY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.MVIEW_WW_WORD_ETYMOLOGY_WORD_ID_IDX);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MviewWwWordEtymology as(String alias) {
        return new MviewWwWordEtymology(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MviewWwWordEtymology as(Name alias) {
        return new MviewWwWordEtymology(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public MviewWwWordEtymology rename(String name) {
        return new MviewWwWordEtymology(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public MviewWwWordEtymology rename(Name name) {
        return new MviewWwWordEtymology(name, null);
    }
}
