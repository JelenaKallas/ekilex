/*
 * This file is generated by jOOQ.
*/
package eki.wordweb.data.db.tables;


import eki.wordweb.data.db.Public;
import eki.wordweb.data.db.tables.records.MviewWwLexicalDecisionDataRecord;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.8"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class MviewWwLexicalDecisionData extends TableImpl<MviewWwLexicalDecisionDataRecord> {

    private static final long serialVersionUID = 1024153162;

    /**
     * The reference instance of <code>public.mview_ww_lexical_decision_data</code>
     */
    public static final MviewWwLexicalDecisionData MVIEW_WW_LEXICAL_DECISION_DATA = new MviewWwLexicalDecisionData();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<MviewWwLexicalDecisionDataRecord> getRecordType() {
        return MviewWwLexicalDecisionDataRecord.class;
    }

    /**
     * The column <code>public.mview_ww_lexical_decision_data.word</code>.
     */
    public final TableField<MviewWwLexicalDecisionDataRecord, String> WORD = createField("word", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>public.mview_ww_lexical_decision_data.is_word</code>.
     */
    public final TableField<MviewWwLexicalDecisionDataRecord, Boolean> IS_WORD = createField("is_word", org.jooq.impl.SQLDataType.BOOLEAN, this, "");

    /**
     * Create a <code>public.mview_ww_lexical_decision_data</code> table reference
     */
    public MviewWwLexicalDecisionData() {
        this(DSL.name("mview_ww_lexical_decision_data"), null);
    }

    /**
     * Create an aliased <code>public.mview_ww_lexical_decision_data</code> table reference
     */
    public MviewWwLexicalDecisionData(String alias) {
        this(DSL.name(alias), MVIEW_WW_LEXICAL_DECISION_DATA);
    }

    /**
     * Create an aliased <code>public.mview_ww_lexical_decision_data</code> table reference
     */
    public MviewWwLexicalDecisionData(Name alias) {
        this(alias, MVIEW_WW_LEXICAL_DECISION_DATA);
    }

    private MviewWwLexicalDecisionData(Name alias, Table<MviewWwLexicalDecisionDataRecord> aliased) {
        this(alias, aliased, null);
    }

    private MviewWwLexicalDecisionData(Name alias, Table<MviewWwLexicalDecisionDataRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MviewWwLexicalDecisionData as(String alias) {
        return new MviewWwLexicalDecisionData(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MviewWwLexicalDecisionData as(Name alias) {
        return new MviewWwLexicalDecisionData(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public MviewWwLexicalDecisionData rename(String name) {
        return new MviewWwLexicalDecisionData(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public MviewWwLexicalDecisionData rename(Name name) {
        return new MviewWwLexicalDecisionData(name, null);
    }
}
