/*
 * This file is generated by jOOQ.
 */
package eki.wordweb.data.db.tables.records;


import eki.wordweb.data.db.tables.MviewWwLexicalDecisionData;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.TableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class MviewWwLexicalDecisionDataRecord extends TableRecordImpl<MviewWwLexicalDecisionDataRecord> implements Record2<String, Boolean> {

    private static final long serialVersionUID = -1175317273;

    /**
     * Setter for <code>public.mview_ww_lexical_decision_data.word</code>.
     */
    public void setWord(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.mview_ww_lexical_decision_data.word</code>.
     */
    public String getWord() {
        return (String) get(0);
    }

    /**
     * Setter for <code>public.mview_ww_lexical_decision_data.is_word</code>.
     */
    public void setIsWord(Boolean value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.mview_ww_lexical_decision_data.is_word</code>.
     */
    public Boolean getIsWord() {
        return (Boolean) get(1);
    }

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row2<String, Boolean> fieldsRow() {
        return (Row2) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row2<String, Boolean> valuesRow() {
        return (Row2) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field1() {
        return MviewWwLexicalDecisionData.MVIEW_WW_LEXICAL_DECISION_DATA.WORD;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Boolean> field2() {
        return MviewWwLexicalDecisionData.MVIEW_WW_LEXICAL_DECISION_DATA.IS_WORD;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component1() {
        return getWord();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Boolean component2() {
        return getIsWord();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value1() {
        return getWord();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Boolean value2() {
        return getIsWord();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MviewWwLexicalDecisionDataRecord value1(String value) {
        setWord(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MviewWwLexicalDecisionDataRecord value2(Boolean value) {
        setIsWord(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MviewWwLexicalDecisionDataRecord values(String value1, Boolean value2) {
        value1(value1);
        value2(value2);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached MviewWwLexicalDecisionDataRecord
     */
    public MviewWwLexicalDecisionDataRecord() {
        super(MviewWwLexicalDecisionData.MVIEW_WW_LEXICAL_DECISION_DATA);
    }

    /**
     * Create a detached, initialised MviewWwLexicalDecisionDataRecord
     */
    public MviewWwLexicalDecisionDataRecord(String word, Boolean isWord) {
        super(MviewWwLexicalDecisionData.MVIEW_WW_LEXICAL_DECISION_DATA);

        set(0, word);
        set(1, isWord);
    }
}
