/*
 * This file is generated by jOOQ.
*/
package eki.ekilex.data.db.tables.records;


import eki.ekilex.data.db.tables.DefinitionRefLink;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class DefinitionRefLinkRecord extends UpdatableRecordImpl<DefinitionRefLinkRecord> implements Record4<Long, Long, String, Long> {

    private static final long serialVersionUID = -1410355601;

    /**
     * Setter for <code>public.definition_ref_link.id</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.definition_ref_link.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>public.definition_ref_link.definition_id</code>.
     */
    public void setDefinitionId(Long value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.definition_ref_link.definition_id</code>.
     */
    public Long getDefinitionId() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>public.definition_ref_link.ref_type</code>.
     */
    public void setRefType(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.definition_ref_link.ref_type</code>.
     */
    public String getRefType() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.definition_ref_link.ref_id</code>.
     */
    public void setRefId(Long value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.definition_ref_link.ref_id</code>.
     */
    public Long getRefId() {
        return (Long) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<Long, Long, String, Long> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<Long, Long, String, Long> valuesRow() {
        return (Row4) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field1() {
        return DefinitionRefLink.DEFINITION_REF_LINK.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field2() {
        return DefinitionRefLink.DEFINITION_REF_LINK.DEFINITION_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return DefinitionRefLink.DEFINITION_REF_LINK.REF_TYPE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field4() {
        return DefinitionRefLink.DEFINITION_REF_LINK.REF_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long component1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long component2() {
        return getDefinitionId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component3() {
        return getRefType();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long component4() {
        return getRefId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value2() {
        return getDefinitionId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getRefType();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value4() {
        return getRefId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DefinitionRefLinkRecord value1(Long value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DefinitionRefLinkRecord value2(Long value) {
        setDefinitionId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DefinitionRefLinkRecord value3(String value) {
        setRefType(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DefinitionRefLinkRecord value4(Long value) {
        setRefId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DefinitionRefLinkRecord values(Long value1, Long value2, String value3, Long value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached DefinitionRefLinkRecord
     */
    public DefinitionRefLinkRecord() {
        super(DefinitionRefLink.DEFINITION_REF_LINK);
    }

    /**
     * Create a detached, initialised DefinitionRefLinkRecord
     */
    public DefinitionRefLinkRecord(Long id, Long definitionId, String refType, Long refId) {
        super(DefinitionRefLink.DEFINITION_REF_LINK);

        set(0, id);
        set(1, definitionId);
        set(2, refType);
        set(3, refId);
    }
}
