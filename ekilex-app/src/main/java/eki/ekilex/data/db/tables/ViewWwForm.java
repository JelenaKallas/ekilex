/*
 * This file is generated by jOOQ.
 */
package eki.ekilex.data.db.tables;


import eki.ekilex.data.db.Public;
import eki.ekilex.data.db.tables.records.ViewWwFormRecord;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ViewWwForm extends TableImpl<ViewWwFormRecord> {

    private static final long serialVersionUID = 550893796;

    /**
     * The reference instance of <code>public.view_ww_form</code>
     */
    public static final ViewWwForm VIEW_WW_FORM = new ViewWwForm();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ViewWwFormRecord> getRecordType() {
        return ViewWwFormRecord.class;
    }

    /**
     * The column <code>public.view_ww_form.word_id</code>.
     */
    public final TableField<ViewWwFormRecord, Long> WORD_ID = createField("word_id", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>public.view_ww_form.word</code>.
     */
    public final TableField<ViewWwFormRecord, String> WORD = createField("word", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>public.view_ww_form.lang</code>.
     */
    public final TableField<ViewWwFormRecord, String> LANG = createField("lang", org.jooq.impl.SQLDataType.CHAR(3), this, "");

    /**
     * The column <code>public.view_ww_form.paradigm_id</code>.
     */
    public final TableField<ViewWwFormRecord, Long> PARADIGM_ID = createField("paradigm_id", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>public.view_ww_form.form_id</code>.
     */
    public final TableField<ViewWwFormRecord, Long> FORM_ID = createField("form_id", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>public.view_ww_form.mode</code>.
     */
    public final TableField<ViewWwFormRecord, String> MODE = createField("mode", org.jooq.impl.SQLDataType.VARCHAR(100), this, "");

    /**
     * The column <code>public.view_ww_form.form</code>.
     */
    public final TableField<ViewWwFormRecord, String> FORM = createField("form", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>public.view_ww_form.morph_code</code>.
     */
    public final TableField<ViewWwFormRecord, String> MORPH_CODE = createField("morph_code", org.jooq.impl.SQLDataType.VARCHAR(100), this, "");

    /**
     * The column <code>public.view_ww_form.components</code>.
     */
    public final TableField<ViewWwFormRecord, String[]> COMPONENTS = createField("components", org.jooq.impl.SQLDataType.VARCHAR.getArrayDataType(), this, "");

    /**
     * The column <code>public.view_ww_form.display_form</code>.
     */
    public final TableField<ViewWwFormRecord, String> DISPLAY_FORM = createField("display_form", org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>public.view_ww_form.vocal_form</code>.
     */
    public final TableField<ViewWwFormRecord, String> VOCAL_FORM = createField("vocal_form", org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>public.view_ww_form.sound_file</code>.
     */
    public final TableField<ViewWwFormRecord, String> SOUND_FILE = createField("sound_file", org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>public.view_ww_form.dataset_codes</code>.
     */
    public final TableField<ViewWwFormRecord, String[]> DATASET_CODES = createField("dataset_codes", org.jooq.impl.SQLDataType.VARCHAR.getArrayDataType(), this, "");

    /**
     * Create a <code>public.view_ww_form</code> table reference
     */
    public ViewWwForm() {
        this(DSL.name("view_ww_form"), null);
    }

    /**
     * Create an aliased <code>public.view_ww_form</code> table reference
     */
    public ViewWwForm(String alias) {
        this(DSL.name(alias), VIEW_WW_FORM);
    }

    /**
     * Create an aliased <code>public.view_ww_form</code> table reference
     */
    public ViewWwForm(Name alias) {
        this(alias, VIEW_WW_FORM);
    }

    private ViewWwForm(Name alias, Table<ViewWwFormRecord> aliased) {
        this(alias, aliased, null);
    }

    private ViewWwForm(Name alias, Table<ViewWwFormRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> ViewWwForm(Table<O> child, ForeignKey<O, ViewWwFormRecord> key) {
        super(child, key, VIEW_WW_FORM);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ViewWwForm as(String alias) {
        return new ViewWwForm(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ViewWwForm as(Name alias) {
        return new ViewWwForm(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public ViewWwForm rename(String name) {
        return new ViewWwForm(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public ViewWwForm rename(Name name) {
        return new ViewWwForm(name, null);
    }
}
