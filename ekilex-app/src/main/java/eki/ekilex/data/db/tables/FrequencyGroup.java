/*
 * This file is generated by jOOQ.
 */
package eki.ekilex.data.db.tables;


import eki.ekilex.data.db.Indexes;
import eki.ekilex.data.db.Keys;
import eki.ekilex.data.db.Public;
import eki.ekilex.data.db.tables.records.FrequencyGroupRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.9"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class FrequencyGroup extends TableImpl<FrequencyGroupRecord> {

    private static final long serialVersionUID = -369286401;

    /**
     * The reference instance of <code>public.frequency_group</code>
     */
    public static final FrequencyGroup FREQUENCY_GROUP = new FrequencyGroup();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<FrequencyGroupRecord> getRecordType() {
        return FrequencyGroupRecord.class;
    }

    /**
     * The column <code>public.frequency_group.code</code>.
     */
    public final TableField<FrequencyGroupRecord, String> CODE = createField("code", org.jooq.impl.SQLDataType.VARCHAR(100).nullable(false), this, "");

    /**
     * The column <code>public.frequency_group.datasets</code>.
     */
    public final TableField<FrequencyGroupRecord, String[]> DATASETS = createField("datasets", org.jooq.impl.SQLDataType.VARCHAR(10).getArrayDataType(), this, "");

    /**
     * The column <code>public.frequency_group.order_by</code>.
     */
    public final TableField<FrequencyGroupRecord, Long> ORDER_BY = createField("order_by", org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaultValue(org.jooq.impl.DSL.field("nextval('frequency_group_order_by_seq'::regclass)", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * Create a <code>public.frequency_group</code> table reference
     */
    public FrequencyGroup() {
        this(DSL.name("frequency_group"), null);
    }

    /**
     * Create an aliased <code>public.frequency_group</code> table reference
     */
    public FrequencyGroup(String alias) {
        this(DSL.name(alias), FREQUENCY_GROUP);
    }

    /**
     * Create an aliased <code>public.frequency_group</code> table reference
     */
    public FrequencyGroup(Name alias) {
        this(alias, FREQUENCY_GROUP);
    }

    private FrequencyGroup(Name alias, Table<FrequencyGroupRecord> aliased) {
        this(alias, aliased, null);
    }

    private FrequencyGroup(Name alias, Table<FrequencyGroupRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> FrequencyGroup(Table<O> child, ForeignKey<O, FrequencyGroupRecord> key) {
        super(child, key, FREQUENCY_GROUP);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.FREQUENCY_GROUP_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<FrequencyGroupRecord, Long> getIdentity() {
        return Keys.IDENTITY_FREQUENCY_GROUP;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<FrequencyGroupRecord> getPrimaryKey() {
        return Keys.FREQUENCY_GROUP_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<FrequencyGroupRecord>> getKeys() {
        return Arrays.<UniqueKey<FrequencyGroupRecord>>asList(Keys.FREQUENCY_GROUP_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public FrequencyGroup as(String alias) {
        return new FrequencyGroup(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public FrequencyGroup as(Name alias) {
        return new FrequencyGroup(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public FrequencyGroup rename(String name) {
        return new FrequencyGroup(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public FrequencyGroup rename(Name name) {
        return new FrequencyGroup(name, null);
    }
}
