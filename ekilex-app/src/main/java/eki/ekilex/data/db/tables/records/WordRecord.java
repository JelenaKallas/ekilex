/*
 * This file is generated by jOOQ.
*/
package eki.ekilex.data.db.tables.records;


import eki.ekilex.data.db.tables.Word;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record7;
import org.jooq.Row7;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class WordRecord extends UpdatableRecordImpl<WordRecord> implements Record7<Long, String, String, Integer, String, String, String> {

    private static final long serialVersionUID = 2068133327;

    /**
     * Setter for <code>public.word.id</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.word.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>public.word.lang</code>.
     */
    public void setLang(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.word.lang</code>.
     */
    public String getLang() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.word.morph_code</code>.
     */
    public void setMorphCode(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.word.morph_code</code>.
     */
    public String getMorphCode() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.word.homonym_nr</code>.
     */
    public void setHomonymNr(Integer value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.word.homonym_nr</code>.
     */
    public Integer getHomonymNr() {
        return (Integer) get(3);
    }

    /**
     * Setter for <code>public.word.display_morph_code</code>.
     */
    public void setDisplayMorphCode(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.word.display_morph_code</code>.
     */
    public String getDisplayMorphCode() {
        return (String) get(4);
    }

    /**
     * Setter for <code>public.word.gender_code</code>.
     */
    public void setGenderCode(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>public.word.gender_code</code>.
     */
    public String getGenderCode() {
        return (String) get(5);
    }

    /**
     * Setter for <code>public.word.type_code</code>.
     */
    public void setTypeCode(String value) {
        set(6, value);
    }

    /**
     * Getter for <code>public.word.type_code</code>.
     */
    public String getTypeCode() {
        return (String) get(6);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record7 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row7<Long, String, String, Integer, String, String, String> fieldsRow() {
        return (Row7) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row7<Long, String, String, Integer, String, String, String> valuesRow() {
        return (Row7) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field1() {
        return Word.WORD.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return Word.WORD.LANG;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return Word.WORD.MORPH_CODE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field4() {
        return Word.WORD.HOMONYM_NR;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field5() {
        return Word.WORD.DISPLAY_MORPH_CODE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field6() {
        return Word.WORD.GENDER_CODE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field7() {
        return Word.WORD.TYPE_CODE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long component1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component2() {
        return getLang();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component3() {
        return getMorphCode();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component4() {
        return getHomonymNr();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component5() {
        return getDisplayMorphCode();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component6() {
        return getGenderCode();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component7() {
        return getTypeCode();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getLang();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getMorphCode();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value4() {
        return getHomonymNr();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value5() {
        return getDisplayMorphCode();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value6() {
        return getGenderCode();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value7() {
        return getTypeCode();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public WordRecord value1(Long value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public WordRecord value2(String value) {
        setLang(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public WordRecord value3(String value) {
        setMorphCode(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public WordRecord value4(Integer value) {
        setHomonymNr(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public WordRecord value5(String value) {
        setDisplayMorphCode(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public WordRecord value6(String value) {
        setGenderCode(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public WordRecord value7(String value) {
        setTypeCode(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public WordRecord values(Long value1, String value2, String value3, Integer value4, String value5, String value6, String value7) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached WordRecord
     */
    public WordRecord() {
        super(Word.WORD);
    }

    /**
     * Create a detached, initialised WordRecord
     */
    public WordRecord(Long id, String lang, String morphCode, Integer homonymNr, String displayMorphCode, String genderCode, String typeCode) {
        super(Word.WORD);

        set(0, id);
        set(1, lang);
        set(2, morphCode);
        set(3, homonymNr);
        set(4, displayMorphCode);
        set(5, genderCode);
        set(6, typeCode);
    }
}
