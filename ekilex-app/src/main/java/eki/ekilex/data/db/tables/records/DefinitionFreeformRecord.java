/*
 * This file is generated by jOOQ.
*/
package eki.ekilex.data.db.tables.records;


import eki.ekilex.data.db.tables.DefinitionFreeform;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class DefinitionFreeformRecord extends UpdatableRecordImpl<DefinitionFreeformRecord> implements Record4<Long, Long, Long, String> {

    private static final long serialVersionUID = 108494174;

    /**
     * Setter for <code>public.definition_freeform.id</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.definition_freeform.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>public.definition_freeform.definition_id</code>.
     */
    public void setDefinitionId(Long value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.definition_freeform.definition_id</code>.
     */
    public Long getDefinitionId() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>public.definition_freeform.freeform_id</code>.
     */
    public void setFreeformId(Long value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.definition_freeform.freeform_id</code>.
     */
    public Long getFreeformId() {
        return (Long) get(2);
    }

    /**
     * Setter for <code>public.definition_freeform.process_state_code</code>.
     */
    public void setProcessStateCode(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.definition_freeform.process_state_code</code>.
     */
    public String getProcessStateCode() {
        return (String) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<Long, Long, Long, String> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<Long, Long, Long, String> valuesRow() {
        return (Row4) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field1() {
        return DefinitionFreeform.DEFINITION_FREEFORM.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field2() {
        return DefinitionFreeform.DEFINITION_FREEFORM.DEFINITION_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field3() {
        return DefinitionFreeform.DEFINITION_FREEFORM.FREEFORM_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field4() {
        return DefinitionFreeform.DEFINITION_FREEFORM.PROCESS_STATE_CODE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long component1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long component2() {
        return getDefinitionId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long component3() {
        return getFreeformId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component4() {
        return getProcessStateCode();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value2() {
        return getDefinitionId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value3() {
        return getFreeformId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value4() {
        return getProcessStateCode();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DefinitionFreeformRecord value1(Long value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DefinitionFreeformRecord value2(Long value) {
        setDefinitionId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DefinitionFreeformRecord value3(Long value) {
        setFreeformId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DefinitionFreeformRecord value4(String value) {
        setProcessStateCode(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DefinitionFreeformRecord values(Long value1, Long value2, Long value3, String value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached DefinitionFreeformRecord
     */
    public DefinitionFreeformRecord() {
        super(DefinitionFreeform.DEFINITION_FREEFORM);
    }

    /**
     * Create a detached, initialised DefinitionFreeformRecord
     */
    public DefinitionFreeformRecord(Long id, Long definitionId, Long freeformId, String processStateCode) {
        super(DefinitionFreeform.DEFINITION_FREEFORM);

        set(0, id);
        set(1, definitionId);
        set(2, freeformId);
        set(3, processStateCode);
    }
}
