/*
 * This file is generated by jOOQ.
*/
package eki.ekilex.data.db.tables;


import eki.ekilex.data.db.Indexes;
import eki.ekilex.data.db.Keys;
import eki.ekilex.data.db.Public;
import eki.ekilex.data.db.tables.records.LexemeGroupMemberRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class LexemeGroupMember extends TableImpl<LexemeGroupMemberRecord> {

    private static final long serialVersionUID = -1504183179;

    /**
     * The reference instance of <code>public.lexeme_group_member</code>
     */
    public static final LexemeGroupMember LEXEME_GROUP_MEMBER = new LexemeGroupMember();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<LexemeGroupMemberRecord> getRecordType() {
        return LexemeGroupMemberRecord.class;
    }

    /**
     * The column <code>public.lexeme_group_member.id</code>.
     */
    public final TableField<LexemeGroupMemberRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaultValue(org.jooq.impl.DSL.field("nextval('lexeme_group_member_id_seq'::regclass)", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>public.lexeme_group_member.lexeme_group_id</code>.
     */
    public final TableField<LexemeGroupMemberRecord, Long> LEXEME_GROUP_ID = createField("lexeme_group_id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>public.lexeme_group_member.lexeme_id</code>.
     */
    public final TableField<LexemeGroupMemberRecord, Long> LEXEME_ID = createField("lexeme_id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * Create a <code>public.lexeme_group_member</code> table reference
     */
    public LexemeGroupMember() {
        this(DSL.name("lexeme_group_member"), null);
    }

    /**
     * Create an aliased <code>public.lexeme_group_member</code> table reference
     */
    public LexemeGroupMember(String alias) {
        this(DSL.name(alias), LEXEME_GROUP_MEMBER);
    }

    /**
     * Create an aliased <code>public.lexeme_group_member</code> table reference
     */
    public LexemeGroupMember(Name alias) {
        this(alias, LEXEME_GROUP_MEMBER);
    }

    private LexemeGroupMember(Name alias, Table<LexemeGroupMemberRecord> aliased) {
        this(alias, aliased, null);
    }

    private LexemeGroupMember(Name alias, Table<LexemeGroupMemberRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.LEXEME_GROUP_MEMBER_LEXEME_GROUP_ID_LEXEME_ID_KEY, Indexes.LEXEME_GROUP_MEMBER_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<LexemeGroupMemberRecord, Long> getIdentity() {
        return Keys.IDENTITY_LEXEME_GROUP_MEMBER;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<LexemeGroupMemberRecord> getPrimaryKey() {
        return Keys.LEXEME_GROUP_MEMBER_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<LexemeGroupMemberRecord>> getKeys() {
        return Arrays.<UniqueKey<LexemeGroupMemberRecord>>asList(Keys.LEXEME_GROUP_MEMBER_PKEY, Keys.LEXEME_GROUP_MEMBER_LEXEME_GROUP_ID_LEXEME_ID_KEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<LexemeGroupMemberRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<LexemeGroupMemberRecord, ?>>asList(Keys.LEXEME_GROUP_MEMBER__LEXEME_GROUP_MEMBER_LEXEME_GROUP_ID_FKEY, Keys.LEXEME_GROUP_MEMBER__LEXEME_GROUP_MEMBER_LEXEME_ID_FKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LexemeGroupMember as(String alias) {
        return new LexemeGroupMember(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LexemeGroupMember as(Name alias) {
        return new LexemeGroupMember(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public LexemeGroupMember rename(String name) {
        return new LexemeGroupMember(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public LexemeGroupMember rename(Name name) {
        return new LexemeGroupMember(name, null);
    }
}
