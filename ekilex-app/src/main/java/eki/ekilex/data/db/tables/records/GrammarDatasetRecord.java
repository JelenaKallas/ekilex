/*
 * This file is generated by jOOQ.
*/
package eki.ekilex.data.db.tables.records;


import eki.ekilex.data.db.tables.GrammarDataset;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class GrammarDatasetRecord extends UpdatableRecordImpl<GrammarDatasetRecord> implements Record2<Long, String> {

    private static final long serialVersionUID = 1157995045;

    /**
     * Setter for <code>public.grammar_dataset.grammar_id</code>.
     */
    public void setGrammarId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.grammar_dataset.grammar_id</code>.
     */
    public Long getGrammarId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>public.grammar_dataset.dataset_code</code>.
     */
    public void setDatasetCode(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.grammar_dataset.dataset_code</code>.
     */
    public String getDatasetCode() {
        return (String) get(1);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record2<Long, String> key() {
        return (Record2) super.key();
    }

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row2<Long, String> fieldsRow() {
        return (Row2) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row2<Long, String> valuesRow() {
        return (Row2) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field1() {
        return GrammarDataset.GRAMMAR_DATASET.GRAMMAR_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return GrammarDataset.GRAMMAR_DATASET.DATASET_CODE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long component1() {
        return getGrammarId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component2() {
        return getDatasetCode();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value1() {
        return getGrammarId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getDatasetCode();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public GrammarDatasetRecord value1(Long value) {
        setGrammarId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public GrammarDatasetRecord value2(String value) {
        setDatasetCode(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public GrammarDatasetRecord values(Long value1, String value2) {
        value1(value1);
        value2(value2);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached GrammarDatasetRecord
     */
    public GrammarDatasetRecord() {
        super(GrammarDataset.GRAMMAR_DATASET);
    }

    /**
     * Create a detached, initialised GrammarDatasetRecord
     */
    public GrammarDatasetRecord(Long grammarId, String datasetCode) {
        super(GrammarDataset.GRAMMAR_DATASET);

        set(0, grammarId);
        set(1, datasetCode);
    }
}
