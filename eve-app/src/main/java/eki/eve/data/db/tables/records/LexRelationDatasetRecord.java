/*
 * This file is generated by jOOQ.
*/
package eki.eve.data.db.tables.records;


import eki.eve.data.db.tables.LexRelationDataset;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class LexRelationDatasetRecord extends UpdatableRecordImpl<LexRelationDatasetRecord> implements Record2<Long, String> {

    private static final long serialVersionUID = 1853122482;

    /**
     * Setter for <code>public.lex_relation_dataset.lex_relation_id</code>.
     */
    public void setLexRelationId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.lex_relation_dataset.lex_relation_id</code>.
     */
    public Long getLexRelationId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>public.lex_relation_dataset.dataset_code</code>.
     */
    public void setDatasetCode(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.lex_relation_dataset.dataset_code</code>.
     */
    public String getDatasetCode() {
        return (String) get(1);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record2<Long, String> key() {
        return (Record2) super.key();
    }

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row2<Long, String> fieldsRow() {
        return (Row2) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row2<Long, String> valuesRow() {
        return (Row2) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field1() {
        return LexRelationDataset.LEX_RELATION_DATASET.LEX_RELATION_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return LexRelationDataset.LEX_RELATION_DATASET.DATASET_CODE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long component1() {
        return getLexRelationId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component2() {
        return getDatasetCode();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value1() {
        return getLexRelationId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getDatasetCode();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LexRelationDatasetRecord value1(Long value) {
        setLexRelationId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LexRelationDatasetRecord value2(String value) {
        setDatasetCode(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LexRelationDatasetRecord values(Long value1, String value2) {
        value1(value1);
        value2(value2);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached LexRelationDatasetRecord
     */
    public LexRelationDatasetRecord() {
        super(LexRelationDataset.LEX_RELATION_DATASET);
    }

    /**
     * Create a detached, initialised LexRelationDatasetRecord
     */
    public LexRelationDatasetRecord(Long lexRelationId, String datasetCode) {
        super(LexRelationDataset.LEX_RELATION_DATASET);

        set(0, lexRelationId);
        set(1, datasetCode);
    }
}
