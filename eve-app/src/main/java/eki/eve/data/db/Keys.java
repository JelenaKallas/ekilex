/*
 * This file is generated by jOOQ.
*/
package eki.eve.data.db;


import eki.eve.data.db.tables.Dataset;
import eki.eve.data.db.tables.Definition;
import eki.eve.data.db.tables.Deriv;
import eki.eve.data.db.tables.DerivLabel;
import eki.eve.data.db.tables.Domain;
import eki.eve.data.db.tables.DomainLabel;
import eki.eve.data.db.tables.EkiUser;
import eki.eve.data.db.tables.Form;
import eki.eve.data.db.tables.Gender;
import eki.eve.data.db.tables.GenderLabel;
import eki.eve.data.db.tables.Grammar;
import eki.eve.data.db.tables.LabelType;
import eki.eve.data.db.tables.Lang;
import eki.eve.data.db.tables.LangLabel;
import eki.eve.data.db.tables.LexRelType;
import eki.eve.data.db.tables.LexRelTypeLabel;
import eki.eve.data.db.tables.LexRelation;
import eki.eve.data.db.tables.Lexeme;
import eki.eve.data.db.tables.LexemeDeriv;
import eki.eve.data.db.tables.LexemeDomain;
import eki.eve.data.db.tables.LexemePos;
import eki.eve.data.db.tables.LexemeRegister;
import eki.eve.data.db.tables.Meaning;
import eki.eve.data.db.tables.Morph;
import eki.eve.data.db.tables.MorphLabel;
import eki.eve.data.db.tables.Paradigm;
import eki.eve.data.db.tables.Pos;
import eki.eve.data.db.tables.PosLabel;
import eki.eve.data.db.tables.Rection;
import eki.eve.data.db.tables.Register;
import eki.eve.data.db.tables.RegisterLabel;
import eki.eve.data.db.tables.Usage;
import eki.eve.data.db.tables.Word;
import eki.eve.data.db.tables.records.DatasetRecord;
import eki.eve.data.db.tables.records.DefinitionRecord;
import eki.eve.data.db.tables.records.DerivLabelRecord;
import eki.eve.data.db.tables.records.DerivRecord;
import eki.eve.data.db.tables.records.DomainLabelRecord;
import eki.eve.data.db.tables.records.DomainRecord;
import eki.eve.data.db.tables.records.EkiUserRecord;
import eki.eve.data.db.tables.records.FormRecord;
import eki.eve.data.db.tables.records.GenderLabelRecord;
import eki.eve.data.db.tables.records.GenderRecord;
import eki.eve.data.db.tables.records.GrammarRecord;
import eki.eve.data.db.tables.records.LabelTypeRecord;
import eki.eve.data.db.tables.records.LangLabelRecord;
import eki.eve.data.db.tables.records.LangRecord;
import eki.eve.data.db.tables.records.LexRelTypeLabelRecord;
import eki.eve.data.db.tables.records.LexRelTypeRecord;
import eki.eve.data.db.tables.records.LexRelationRecord;
import eki.eve.data.db.tables.records.LexemeDerivRecord;
import eki.eve.data.db.tables.records.LexemeDomainRecord;
import eki.eve.data.db.tables.records.LexemePosRecord;
import eki.eve.data.db.tables.records.LexemeRecord;
import eki.eve.data.db.tables.records.LexemeRegisterRecord;
import eki.eve.data.db.tables.records.MeaningRecord;
import eki.eve.data.db.tables.records.MorphLabelRecord;
import eki.eve.data.db.tables.records.MorphRecord;
import eki.eve.data.db.tables.records.ParadigmRecord;
import eki.eve.data.db.tables.records.PosLabelRecord;
import eki.eve.data.db.tables.records.PosRecord;
import eki.eve.data.db.tables.records.RectionRecord;
import eki.eve.data.db.tables.records.RegisterLabelRecord;
import eki.eve.data.db.tables.records.RegisterRecord;
import eki.eve.data.db.tables.records.UsageRecord;
import eki.eve.data.db.tables.records.WordRecord;

import javax.annotation.Generated;

import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.UniqueKey;
import org.jooq.impl.AbstractKeys;


/**
 * A class modelling foreign key relationships between tables of the <code>public</code> 
 * schema
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // IDENTITY definitions
    // -------------------------------------------------------------------------

    public static final Identity<DefinitionRecord, Long> IDENTITY_DEFINITION = Identities0.IDENTITY_DEFINITION;
    public static final Identity<EkiUserRecord, Long> IDENTITY_EKI_USER = Identities0.IDENTITY_EKI_USER;
    public static final Identity<FormRecord, Long> IDENTITY_FORM = Identities0.IDENTITY_FORM;
    public static final Identity<GrammarRecord, Long> IDENTITY_GRAMMAR = Identities0.IDENTITY_GRAMMAR;
    public static final Identity<LexRelationRecord, Long> IDENTITY_LEX_RELATION = Identities0.IDENTITY_LEX_RELATION;
    public static final Identity<LexemeRecord, Long> IDENTITY_LEXEME = Identities0.IDENTITY_LEXEME;
    public static final Identity<LexemeDerivRecord, Long> IDENTITY_LEXEME_DERIV = Identities0.IDENTITY_LEXEME_DERIV;
    public static final Identity<LexemeDomainRecord, Long> IDENTITY_LEXEME_DOMAIN = Identities0.IDENTITY_LEXEME_DOMAIN;
    public static final Identity<LexemePosRecord, Long> IDENTITY_LEXEME_POS = Identities0.IDENTITY_LEXEME_POS;
    public static final Identity<LexemeRegisterRecord, Long> IDENTITY_LEXEME_REGISTER = Identities0.IDENTITY_LEXEME_REGISTER;
    public static final Identity<MeaningRecord, Long> IDENTITY_MEANING = Identities0.IDENTITY_MEANING;
    public static final Identity<ParadigmRecord, Long> IDENTITY_PARADIGM = Identities0.IDENTITY_PARADIGM;
    public static final Identity<RectionRecord, Long> IDENTITY_RECTION = Identities0.IDENTITY_RECTION;
    public static final Identity<UsageRecord, Long> IDENTITY_USAGE = Identities0.IDENTITY_USAGE;
    public static final Identity<WordRecord, Long> IDENTITY_WORD = Identities0.IDENTITY_WORD;

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<DatasetRecord> DATASET_PKEY = UniqueKeys0.DATASET_PKEY;
    public static final UniqueKey<DefinitionRecord> DEFINITION_PKEY = UniqueKeys0.DEFINITION_PKEY;
    public static final UniqueKey<DerivRecord> DERIV_PKEY = UniqueKeys0.DERIV_PKEY;
    public static final UniqueKey<DerivLabelRecord> DERIV_LABEL_CODE_LANG_TYPE_KEY = UniqueKeys0.DERIV_LABEL_CODE_LANG_TYPE_KEY;
    public static final UniqueKey<DomainRecord> DOMAIN_PKEY = UniqueKeys0.DOMAIN_PKEY;
    public static final UniqueKey<DomainLabelRecord> DOMAIN_LABEL_CODE_ORIGIN_LANG_TYPE_KEY = UniqueKeys0.DOMAIN_LABEL_CODE_ORIGIN_LANG_TYPE_KEY;
    public static final UniqueKey<EkiUserRecord> EKI_USER_PKEY = UniqueKeys0.EKI_USER_PKEY;
    public static final UniqueKey<EkiUserRecord> EKI_USER_NAME_KEY = UniqueKeys0.EKI_USER_NAME_KEY;
    public static final UniqueKey<FormRecord> FORM_PKEY = UniqueKeys0.FORM_PKEY;
    public static final UniqueKey<GenderRecord> GENDER_PKEY = UniqueKeys0.GENDER_PKEY;
    public static final UniqueKey<GenderLabelRecord> GENDER_LABEL_CODE_LANG_TYPE_KEY = UniqueKeys0.GENDER_LABEL_CODE_LANG_TYPE_KEY;
    public static final UniqueKey<GrammarRecord> GRAMMAR_PKEY = UniqueKeys0.GRAMMAR_PKEY;
    public static final UniqueKey<LabelTypeRecord> LABEL_TYPE_PKEY = UniqueKeys0.LABEL_TYPE_PKEY;
    public static final UniqueKey<LangRecord> LANG_PKEY = UniqueKeys0.LANG_PKEY;
    public static final UniqueKey<LangLabelRecord> LANG_LABEL_CODE_LANG_TYPE_KEY = UniqueKeys0.LANG_LABEL_CODE_LANG_TYPE_KEY;
    public static final UniqueKey<LexRelTypeRecord> LEX_REL_TYPE_PKEY = UniqueKeys0.LEX_REL_TYPE_PKEY;
    public static final UniqueKey<LexRelTypeLabelRecord> LEX_REL_TYPE_LABEL_CODE_LANG_TYPE_KEY = UniqueKeys0.LEX_REL_TYPE_LABEL_CODE_LANG_TYPE_KEY;
    public static final UniqueKey<LexRelationRecord> LEX_RELATION_PKEY = UniqueKeys0.LEX_RELATION_PKEY;
    public static final UniqueKey<LexRelationRecord> LEX_RELATION_LEXEME1_ID_LEXEME2_ID_LEX_REL_TYPE_CODE_KEY = UniqueKeys0.LEX_RELATION_LEXEME1_ID_LEXEME2_ID_LEX_REL_TYPE_CODE_KEY;
    public static final UniqueKey<LexemeRecord> LEXEME_PKEY = UniqueKeys0.LEXEME_PKEY;
    public static final UniqueKey<LexemeRecord> LEXEME_WORD_ID_MEANING_ID_KEY = UniqueKeys0.LEXEME_WORD_ID_MEANING_ID_KEY;
    public static final UniqueKey<LexemeDerivRecord> LEXEME_DERIV_PKEY = UniqueKeys0.LEXEME_DERIV_PKEY;
    public static final UniqueKey<LexemeDerivRecord> LEXEME_DERIV_LEXEME_ID_DERIV_CODE_KEY = UniqueKeys0.LEXEME_DERIV_LEXEME_ID_DERIV_CODE_KEY;
    public static final UniqueKey<LexemeDomainRecord> LEXEME_DOMAIN_PKEY = UniqueKeys0.LEXEME_DOMAIN_PKEY;
    public static final UniqueKey<LexemeDomainRecord> LEXEME_DOMAIN_LEXEME_ID_DOMAIN_CODE_DOMAIN_ORIGIN_KEY = UniqueKeys0.LEXEME_DOMAIN_LEXEME_ID_DOMAIN_CODE_DOMAIN_ORIGIN_KEY;
    public static final UniqueKey<LexemePosRecord> LEXEME_POS_PKEY = UniqueKeys0.LEXEME_POS_PKEY;
    public static final UniqueKey<LexemePosRecord> LEXEME_POS_LEXEME_ID_POS_CODE_KEY = UniqueKeys0.LEXEME_POS_LEXEME_ID_POS_CODE_KEY;
    public static final UniqueKey<LexemeRegisterRecord> LEXEME_REGISTER_PKEY = UniqueKeys0.LEXEME_REGISTER_PKEY;
    public static final UniqueKey<LexemeRegisterRecord> LEXEME_REGISTER_LEXEME_ID_REGISTER_CODE_KEY = UniqueKeys0.LEXEME_REGISTER_LEXEME_ID_REGISTER_CODE_KEY;
    public static final UniqueKey<MeaningRecord> MEANING_PKEY = UniqueKeys0.MEANING_PKEY;
    public static final UniqueKey<MorphRecord> MORPH_PKEY = UniqueKeys0.MORPH_PKEY;
    public static final UniqueKey<MorphLabelRecord> MORPH_LABEL_CODE_LANG_TYPE_KEY = UniqueKeys0.MORPH_LABEL_CODE_LANG_TYPE_KEY;
    public static final UniqueKey<ParadigmRecord> PARADIGM_PKEY = UniqueKeys0.PARADIGM_PKEY;
    public static final UniqueKey<PosRecord> POS_PKEY = UniqueKeys0.POS_PKEY;
    public static final UniqueKey<PosLabelRecord> POS_LABEL_CODE_LANG_TYPE_KEY = UniqueKeys0.POS_LABEL_CODE_LANG_TYPE_KEY;
    public static final UniqueKey<RectionRecord> RECTION_PKEY = UniqueKeys0.RECTION_PKEY;
    public static final UniqueKey<RegisterRecord> REGISTER_PKEY = UniqueKeys0.REGISTER_PKEY;
    public static final UniqueKey<RegisterLabelRecord> REGISTER_LABEL_CODE_LANG_TYPE_KEY = UniqueKeys0.REGISTER_LABEL_CODE_LANG_TYPE_KEY;
    public static final UniqueKey<UsageRecord> USAGE_PKEY = UniqueKeys0.USAGE_PKEY;
    public static final UniqueKey<WordRecord> WORD_PKEY = UniqueKeys0.WORD_PKEY;

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------

    public static final ForeignKey<DefinitionRecord, MeaningRecord> DEFINITION__DEFINITION_MEANING_ID_FKEY = ForeignKeys0.DEFINITION__DEFINITION_MEANING_ID_FKEY;
    public static final ForeignKey<DefinitionRecord, LangRecord> DEFINITION__DEFINITION_LANG_FKEY = ForeignKeys0.DEFINITION__DEFINITION_LANG_FKEY;
    public static final ForeignKey<DerivLabelRecord, DerivRecord> DERIV_LABEL__DERIV_LABEL_CODE_FKEY = ForeignKeys0.DERIV_LABEL__DERIV_LABEL_CODE_FKEY;
    public static final ForeignKey<DerivLabelRecord, LangRecord> DERIV_LABEL__DERIV_LABEL_LANG_FKEY = ForeignKeys0.DERIV_LABEL__DERIV_LABEL_LANG_FKEY;
    public static final ForeignKey<DerivLabelRecord, LabelTypeRecord> DERIV_LABEL__DERIV_LABEL_TYPE_FKEY = ForeignKeys0.DERIV_LABEL__DERIV_LABEL_TYPE_FKEY;
    public static final ForeignKey<DomainRecord, DomainRecord> DOMAIN__DOMAIN_PARENT_CODE_FKEY = ForeignKeys0.DOMAIN__DOMAIN_PARENT_CODE_FKEY;
    public static final ForeignKey<DomainLabelRecord, DomainRecord> DOMAIN_LABEL__DOMAIN_LABEL_CODE_FKEY = ForeignKeys0.DOMAIN_LABEL__DOMAIN_LABEL_CODE_FKEY;
    public static final ForeignKey<DomainLabelRecord, LangRecord> DOMAIN_LABEL__DOMAIN_LABEL_LANG_FKEY = ForeignKeys0.DOMAIN_LABEL__DOMAIN_LABEL_LANG_FKEY;
    public static final ForeignKey<DomainLabelRecord, LabelTypeRecord> DOMAIN_LABEL__DOMAIN_LABEL_TYPE_FKEY = ForeignKeys0.DOMAIN_LABEL__DOMAIN_LABEL_TYPE_FKEY;
    public static final ForeignKey<FormRecord, ParadigmRecord> FORM__FORM_PARADIGM_ID_FKEY = ForeignKeys0.FORM__FORM_PARADIGM_ID_FKEY;
    public static final ForeignKey<FormRecord, MorphRecord> FORM__FORM_MORPH_CODE_FKEY = ForeignKeys0.FORM__FORM_MORPH_CODE_FKEY;
    public static final ForeignKey<GenderLabelRecord, GenderRecord> GENDER_LABEL__GENDER_LABEL_CODE_FKEY = ForeignKeys0.GENDER_LABEL__GENDER_LABEL_CODE_FKEY;
    public static final ForeignKey<GenderLabelRecord, LangRecord> GENDER_LABEL__GENDER_LABEL_LANG_FKEY = ForeignKeys0.GENDER_LABEL__GENDER_LABEL_LANG_FKEY;
    public static final ForeignKey<GenderLabelRecord, LabelTypeRecord> GENDER_LABEL__GENDER_LABEL_TYPE_FKEY = ForeignKeys0.GENDER_LABEL__GENDER_LABEL_TYPE_FKEY;
    public static final ForeignKey<GrammarRecord, LexemeRecord> GRAMMAR__GRAMMAR_LEXEME_ID_FKEY = ForeignKeys0.GRAMMAR__GRAMMAR_LEXEME_ID_FKEY;
    public static final ForeignKey<GrammarRecord, LangRecord> GRAMMAR__GRAMMAR_LANG_FKEY = ForeignKeys0.GRAMMAR__GRAMMAR_LANG_FKEY;
    public static final ForeignKey<LangLabelRecord, LangRecord> LANG_LABEL__LANG_LABEL_CODE_FKEY = ForeignKeys0.LANG_LABEL__LANG_LABEL_CODE_FKEY;
    public static final ForeignKey<LangLabelRecord, LangRecord> LANG_LABEL__LANG_LABEL_LANG_FKEY = ForeignKeys0.LANG_LABEL__LANG_LABEL_LANG_FKEY;
    public static final ForeignKey<LangLabelRecord, LabelTypeRecord> LANG_LABEL__LANG_LABEL_TYPE_FKEY = ForeignKeys0.LANG_LABEL__LANG_LABEL_TYPE_FKEY;
    public static final ForeignKey<LexRelTypeLabelRecord, LexRelTypeRecord> LEX_REL_TYPE_LABEL__LEX_REL_TYPE_LABEL_CODE_FKEY = ForeignKeys0.LEX_REL_TYPE_LABEL__LEX_REL_TYPE_LABEL_CODE_FKEY;
    public static final ForeignKey<LexRelTypeLabelRecord, LangRecord> LEX_REL_TYPE_LABEL__LEX_REL_TYPE_LABEL_LANG_FKEY = ForeignKeys0.LEX_REL_TYPE_LABEL__LEX_REL_TYPE_LABEL_LANG_FKEY;
    public static final ForeignKey<LexRelTypeLabelRecord, LabelTypeRecord> LEX_REL_TYPE_LABEL__LEX_REL_TYPE_LABEL_TYPE_FKEY = ForeignKeys0.LEX_REL_TYPE_LABEL__LEX_REL_TYPE_LABEL_TYPE_FKEY;
    public static final ForeignKey<LexRelationRecord, LexemeRecord> LEX_RELATION__LEX_RELATION_LEXEME1_ID_FKEY = ForeignKeys0.LEX_RELATION__LEX_RELATION_LEXEME1_ID_FKEY;
    public static final ForeignKey<LexRelationRecord, LexemeRecord> LEX_RELATION__LEX_RELATION_LEXEME2_ID_FKEY = ForeignKeys0.LEX_RELATION__LEX_RELATION_LEXEME2_ID_FKEY;
    public static final ForeignKey<LexRelationRecord, LexRelTypeRecord> LEX_RELATION__LEX_RELATION_LEX_REL_TYPE_CODE_FKEY = ForeignKeys0.LEX_RELATION__LEX_RELATION_LEX_REL_TYPE_CODE_FKEY;
    public static final ForeignKey<LexemeRecord, WordRecord> LEXEME__LEXEME_WORD_ID_FKEY = ForeignKeys0.LEXEME__LEXEME_WORD_ID_FKEY;
    public static final ForeignKey<LexemeRecord, MeaningRecord> LEXEME__LEXEME_MEANING_ID_FKEY = ForeignKeys0.LEXEME__LEXEME_MEANING_ID_FKEY;
    public static final ForeignKey<LexemeDerivRecord, LexemeRecord> LEXEME_DERIV__LEXEME_DERIV_LEXEME_ID_FKEY = ForeignKeys0.LEXEME_DERIV__LEXEME_DERIV_LEXEME_ID_FKEY;
    public static final ForeignKey<LexemeDerivRecord, DerivRecord> LEXEME_DERIV__LEXEME_DERIV_DERIV_CODE_FKEY = ForeignKeys0.LEXEME_DERIV__LEXEME_DERIV_DERIV_CODE_FKEY;
    public static final ForeignKey<LexemeDomainRecord, LexemeRecord> LEXEME_DOMAIN__LEXEME_DOMAIN_LEXEME_ID_FKEY = ForeignKeys0.LEXEME_DOMAIN__LEXEME_DOMAIN_LEXEME_ID_FKEY;
    public static final ForeignKey<LexemeDomainRecord, DomainRecord> LEXEME_DOMAIN__LEXEME_DOMAIN_DOMAIN_CODE_FKEY = ForeignKeys0.LEXEME_DOMAIN__LEXEME_DOMAIN_DOMAIN_CODE_FKEY;
    public static final ForeignKey<LexemePosRecord, LexemeRecord> LEXEME_POS__LEXEME_POS_LEXEME_ID_FKEY = ForeignKeys0.LEXEME_POS__LEXEME_POS_LEXEME_ID_FKEY;
    public static final ForeignKey<LexemePosRecord, PosRecord> LEXEME_POS__LEXEME_POS_POS_CODE_FKEY = ForeignKeys0.LEXEME_POS__LEXEME_POS_POS_CODE_FKEY;
    public static final ForeignKey<LexemeRegisterRecord, LexemeRecord> LEXEME_REGISTER__LEXEME_REGISTER_LEXEME_ID_FKEY = ForeignKeys0.LEXEME_REGISTER__LEXEME_REGISTER_LEXEME_ID_FKEY;
    public static final ForeignKey<LexemeRegisterRecord, RegisterRecord> LEXEME_REGISTER__LEXEME_REGISTER_REGISTER_CODE_FKEY = ForeignKeys0.LEXEME_REGISTER__LEXEME_REGISTER_REGISTER_CODE_FKEY;
    public static final ForeignKey<MorphLabelRecord, MorphRecord> MORPH_LABEL__MORPH_LABEL_CODE_FKEY = ForeignKeys0.MORPH_LABEL__MORPH_LABEL_CODE_FKEY;
    public static final ForeignKey<MorphLabelRecord, LangRecord> MORPH_LABEL__MORPH_LABEL_LANG_FKEY = ForeignKeys0.MORPH_LABEL__MORPH_LABEL_LANG_FKEY;
    public static final ForeignKey<MorphLabelRecord, LabelTypeRecord> MORPH_LABEL__MORPH_LABEL_TYPE_FKEY = ForeignKeys0.MORPH_LABEL__MORPH_LABEL_TYPE_FKEY;
    public static final ForeignKey<ParadigmRecord, WordRecord> PARADIGM__PARADIGM_WORD_ID_FKEY = ForeignKeys0.PARADIGM__PARADIGM_WORD_ID_FKEY;
    public static final ForeignKey<PosLabelRecord, PosRecord> POS_LABEL__POS_LABEL_CODE_FKEY = ForeignKeys0.POS_LABEL__POS_LABEL_CODE_FKEY;
    public static final ForeignKey<PosLabelRecord, LangRecord> POS_LABEL__POS_LABEL_LANG_FKEY = ForeignKeys0.POS_LABEL__POS_LABEL_LANG_FKEY;
    public static final ForeignKey<PosLabelRecord, LabelTypeRecord> POS_LABEL__POS_LABEL_TYPE_FKEY = ForeignKeys0.POS_LABEL__POS_LABEL_TYPE_FKEY;
    public static final ForeignKey<RectionRecord, LexemeRecord> RECTION__RECTION_LEXEME_ID_FKEY = ForeignKeys0.RECTION__RECTION_LEXEME_ID_FKEY;
    public static final ForeignKey<RegisterLabelRecord, RegisterRecord> REGISTER_LABEL__REGISTER_LABEL_CODE_FKEY = ForeignKeys0.REGISTER_LABEL__REGISTER_LABEL_CODE_FKEY;
    public static final ForeignKey<RegisterLabelRecord, LangRecord> REGISTER_LABEL__REGISTER_LABEL_LANG_FKEY = ForeignKeys0.REGISTER_LABEL__REGISTER_LABEL_LANG_FKEY;
    public static final ForeignKey<RegisterLabelRecord, LabelTypeRecord> REGISTER_LABEL__REGISTER_LABEL_TYPE_FKEY = ForeignKeys0.REGISTER_LABEL__REGISTER_LABEL_TYPE_FKEY;
    public static final ForeignKey<UsageRecord, RectionRecord> USAGE__USAGE_RECTION_ID_FKEY = ForeignKeys0.USAGE__USAGE_RECTION_ID_FKEY;
    public static final ForeignKey<WordRecord, LangRecord> WORD__WORD_LANG_FKEY = ForeignKeys0.WORD__WORD_LANG_FKEY;
    public static final ForeignKey<WordRecord, MorphRecord> WORD__WORD_MORPH_CODE_FKEY = ForeignKeys0.WORD__WORD_MORPH_CODE_FKEY;

    // -------------------------------------------------------------------------
    // [#1459] distribute members to avoid static initialisers > 64kb
    // -------------------------------------------------------------------------

    private static class Identities0 extends AbstractKeys {
        public static Identity<DefinitionRecord, Long> IDENTITY_DEFINITION = createIdentity(Definition.DEFINITION, Definition.DEFINITION.ID);
        public static Identity<EkiUserRecord, Long> IDENTITY_EKI_USER = createIdentity(EkiUser.EKI_USER, EkiUser.EKI_USER.ID);
        public static Identity<FormRecord, Long> IDENTITY_FORM = createIdentity(Form.FORM, Form.FORM.ID);
        public static Identity<GrammarRecord, Long> IDENTITY_GRAMMAR = createIdentity(Grammar.GRAMMAR, Grammar.GRAMMAR.ID);
        public static Identity<LexRelationRecord, Long> IDENTITY_LEX_RELATION = createIdentity(LexRelation.LEX_RELATION, LexRelation.LEX_RELATION.ID);
        public static Identity<LexemeRecord, Long> IDENTITY_LEXEME = createIdentity(Lexeme.LEXEME, Lexeme.LEXEME.ID);
        public static Identity<LexemeDerivRecord, Long> IDENTITY_LEXEME_DERIV = createIdentity(LexemeDeriv.LEXEME_DERIV, LexemeDeriv.LEXEME_DERIV.ID);
        public static Identity<LexemeDomainRecord, Long> IDENTITY_LEXEME_DOMAIN = createIdentity(LexemeDomain.LEXEME_DOMAIN, LexemeDomain.LEXEME_DOMAIN.ID);
        public static Identity<LexemePosRecord, Long> IDENTITY_LEXEME_POS = createIdentity(LexemePos.LEXEME_POS, LexemePos.LEXEME_POS.ID);
        public static Identity<LexemeRegisterRecord, Long> IDENTITY_LEXEME_REGISTER = createIdentity(LexemeRegister.LEXEME_REGISTER, LexemeRegister.LEXEME_REGISTER.ID);
        public static Identity<MeaningRecord, Long> IDENTITY_MEANING = createIdentity(Meaning.MEANING, Meaning.MEANING.ID);
        public static Identity<ParadigmRecord, Long> IDENTITY_PARADIGM = createIdentity(Paradigm.PARADIGM, Paradigm.PARADIGM.ID);
        public static Identity<RectionRecord, Long> IDENTITY_RECTION = createIdentity(Rection.RECTION, Rection.RECTION.ID);
        public static Identity<UsageRecord, Long> IDENTITY_USAGE = createIdentity(Usage.USAGE, Usage.USAGE.ID);
        public static Identity<WordRecord, Long> IDENTITY_WORD = createIdentity(Word.WORD, Word.WORD.ID);
    }

    private static class UniqueKeys0 extends AbstractKeys {
        public static final UniqueKey<DatasetRecord> DATASET_PKEY = createUniqueKey(Dataset.DATASET, "dataset_pkey", Dataset.DATASET.CODE);
        public static final UniqueKey<DefinitionRecord> DEFINITION_PKEY = createUniqueKey(Definition.DEFINITION, "definition_pkey", Definition.DEFINITION.ID);
        public static final UniqueKey<DerivRecord> DERIV_PKEY = createUniqueKey(Deriv.DERIV, "deriv_pkey", Deriv.DERIV.CODE);
        public static final UniqueKey<DerivLabelRecord> DERIV_LABEL_CODE_LANG_TYPE_KEY = createUniqueKey(DerivLabel.DERIV_LABEL, "deriv_label_code_lang_type_key", DerivLabel.DERIV_LABEL.CODE, DerivLabel.DERIV_LABEL.LANG, DerivLabel.DERIV_LABEL.TYPE);
        public static final UniqueKey<DomainRecord> DOMAIN_PKEY = createUniqueKey(Domain.DOMAIN, "domain_pkey", Domain.DOMAIN.CODE, Domain.DOMAIN.ORIGIN);
        public static final UniqueKey<DomainLabelRecord> DOMAIN_LABEL_CODE_ORIGIN_LANG_TYPE_KEY = createUniqueKey(DomainLabel.DOMAIN_LABEL, "domain_label_code_origin_lang_type_key", DomainLabel.DOMAIN_LABEL.CODE, DomainLabel.DOMAIN_LABEL.ORIGIN, DomainLabel.DOMAIN_LABEL.LANG, DomainLabel.DOMAIN_LABEL.TYPE);
        public static final UniqueKey<EkiUserRecord> EKI_USER_PKEY = createUniqueKey(EkiUser.EKI_USER, "eki_user_pkey", EkiUser.EKI_USER.ID);
        public static final UniqueKey<EkiUserRecord> EKI_USER_NAME_KEY = createUniqueKey(EkiUser.EKI_USER, "eki_user_name_key", EkiUser.EKI_USER.NAME);
        public static final UniqueKey<FormRecord> FORM_PKEY = createUniqueKey(Form.FORM, "form_pkey", Form.FORM.ID);
        public static final UniqueKey<GenderRecord> GENDER_PKEY = createUniqueKey(Gender.GENDER, "gender_pkey", Gender.GENDER.CODE);
        public static final UniqueKey<GenderLabelRecord> GENDER_LABEL_CODE_LANG_TYPE_KEY = createUniqueKey(GenderLabel.GENDER_LABEL, "gender_label_code_lang_type_key", GenderLabel.GENDER_LABEL.CODE, GenderLabel.GENDER_LABEL.LANG, GenderLabel.GENDER_LABEL.TYPE);
        public static final UniqueKey<GrammarRecord> GRAMMAR_PKEY = createUniqueKey(Grammar.GRAMMAR, "grammar_pkey", Grammar.GRAMMAR.ID);
        public static final UniqueKey<LabelTypeRecord> LABEL_TYPE_PKEY = createUniqueKey(LabelType.LABEL_TYPE, "label_type_pkey", LabelType.LABEL_TYPE.CODE);
        public static final UniqueKey<LangRecord> LANG_PKEY = createUniqueKey(Lang.LANG, "lang_pkey", Lang.LANG.CODE);
        public static final UniqueKey<LangLabelRecord> LANG_LABEL_CODE_LANG_TYPE_KEY = createUniqueKey(LangLabel.LANG_LABEL, "lang_label_code_lang_type_key", LangLabel.LANG_LABEL.CODE, LangLabel.LANG_LABEL.LANG, LangLabel.LANG_LABEL.TYPE);
        public static final UniqueKey<LexRelTypeRecord> LEX_REL_TYPE_PKEY = createUniqueKey(LexRelType.LEX_REL_TYPE, "lex_rel_type_pkey", LexRelType.LEX_REL_TYPE.CODE);
        public static final UniqueKey<LexRelTypeLabelRecord> LEX_REL_TYPE_LABEL_CODE_LANG_TYPE_KEY = createUniqueKey(LexRelTypeLabel.LEX_REL_TYPE_LABEL, "lex_rel_type_label_code_lang_type_key", LexRelTypeLabel.LEX_REL_TYPE_LABEL.CODE, LexRelTypeLabel.LEX_REL_TYPE_LABEL.LANG, LexRelTypeLabel.LEX_REL_TYPE_LABEL.TYPE);
        public static final UniqueKey<LexRelationRecord> LEX_RELATION_PKEY = createUniqueKey(LexRelation.LEX_RELATION, "lex_relation_pkey", LexRelation.LEX_RELATION.ID);
        public static final UniqueKey<LexRelationRecord> LEX_RELATION_LEXEME1_ID_LEXEME2_ID_LEX_REL_TYPE_CODE_KEY = createUniqueKey(LexRelation.LEX_RELATION, "lex_relation_lexeme1_id_lexeme2_id_lex_rel_type_code_key", LexRelation.LEX_RELATION.LEXEME1_ID, LexRelation.LEX_RELATION.LEXEME2_ID, LexRelation.LEX_RELATION.LEX_REL_TYPE_CODE);
        public static final UniqueKey<LexemeRecord> LEXEME_PKEY = createUniqueKey(Lexeme.LEXEME, "lexeme_pkey", Lexeme.LEXEME.ID);
        public static final UniqueKey<LexemeRecord> LEXEME_WORD_ID_MEANING_ID_KEY = createUniqueKey(Lexeme.LEXEME, "lexeme_word_id_meaning_id_key", Lexeme.LEXEME.WORD_ID, Lexeme.LEXEME.MEANING_ID);
        public static final UniqueKey<LexemeDerivRecord> LEXEME_DERIV_PKEY = createUniqueKey(LexemeDeriv.LEXEME_DERIV, "lexeme_deriv_pkey", LexemeDeriv.LEXEME_DERIV.ID);
        public static final UniqueKey<LexemeDerivRecord> LEXEME_DERIV_LEXEME_ID_DERIV_CODE_KEY = createUniqueKey(LexemeDeriv.LEXEME_DERIV, "lexeme_deriv_lexeme_id_deriv_code_key", LexemeDeriv.LEXEME_DERIV.LEXEME_ID, LexemeDeriv.LEXEME_DERIV.DERIV_CODE);
        public static final UniqueKey<LexemeDomainRecord> LEXEME_DOMAIN_PKEY = createUniqueKey(LexemeDomain.LEXEME_DOMAIN, "lexeme_domain_pkey", LexemeDomain.LEXEME_DOMAIN.ID);
        public static final UniqueKey<LexemeDomainRecord> LEXEME_DOMAIN_LEXEME_ID_DOMAIN_CODE_DOMAIN_ORIGIN_KEY = createUniqueKey(LexemeDomain.LEXEME_DOMAIN, "lexeme_domain_lexeme_id_domain_code_domain_origin_key", LexemeDomain.LEXEME_DOMAIN.LEXEME_ID, LexemeDomain.LEXEME_DOMAIN.DOMAIN_CODE, LexemeDomain.LEXEME_DOMAIN.DOMAIN_ORIGIN);
        public static final UniqueKey<LexemePosRecord> LEXEME_POS_PKEY = createUniqueKey(LexemePos.LEXEME_POS, "lexeme_pos_pkey", LexemePos.LEXEME_POS.ID);
        public static final UniqueKey<LexemePosRecord> LEXEME_POS_LEXEME_ID_POS_CODE_KEY = createUniqueKey(LexemePos.LEXEME_POS, "lexeme_pos_lexeme_id_pos_code_key", LexemePos.LEXEME_POS.LEXEME_ID, LexemePos.LEXEME_POS.POS_CODE);
        public static final UniqueKey<LexemeRegisterRecord> LEXEME_REGISTER_PKEY = createUniqueKey(LexemeRegister.LEXEME_REGISTER, "lexeme_register_pkey", LexemeRegister.LEXEME_REGISTER.ID);
        public static final UniqueKey<LexemeRegisterRecord> LEXEME_REGISTER_LEXEME_ID_REGISTER_CODE_KEY = createUniqueKey(LexemeRegister.LEXEME_REGISTER, "lexeme_register_lexeme_id_register_code_key", LexemeRegister.LEXEME_REGISTER.LEXEME_ID, LexemeRegister.LEXEME_REGISTER.REGISTER_CODE);
        public static final UniqueKey<MeaningRecord> MEANING_PKEY = createUniqueKey(Meaning.MEANING, "meaning_pkey", Meaning.MEANING.ID);
        public static final UniqueKey<MorphRecord> MORPH_PKEY = createUniqueKey(Morph.MORPH, "morph_pkey", Morph.MORPH.CODE);
        public static final UniqueKey<MorphLabelRecord> MORPH_LABEL_CODE_LANG_TYPE_KEY = createUniqueKey(MorphLabel.MORPH_LABEL, "morph_label_code_lang_type_key", MorphLabel.MORPH_LABEL.CODE, MorphLabel.MORPH_LABEL.LANG, MorphLabel.MORPH_LABEL.TYPE);
        public static final UniqueKey<ParadigmRecord> PARADIGM_PKEY = createUniqueKey(Paradigm.PARADIGM, "paradigm_pkey", Paradigm.PARADIGM.ID);
        public static final UniqueKey<PosRecord> POS_PKEY = createUniqueKey(Pos.POS, "pos_pkey", Pos.POS.CODE);
        public static final UniqueKey<PosLabelRecord> POS_LABEL_CODE_LANG_TYPE_KEY = createUniqueKey(PosLabel.POS_LABEL, "pos_label_code_lang_type_key", PosLabel.POS_LABEL.CODE, PosLabel.POS_LABEL.LANG, PosLabel.POS_LABEL.TYPE);
        public static final UniqueKey<RectionRecord> RECTION_PKEY = createUniqueKey(Rection.RECTION, "rection_pkey", Rection.RECTION.ID);
        public static final UniqueKey<RegisterRecord> REGISTER_PKEY = createUniqueKey(Register.REGISTER, "register_pkey", Register.REGISTER.CODE);
        public static final UniqueKey<RegisterLabelRecord> REGISTER_LABEL_CODE_LANG_TYPE_KEY = createUniqueKey(RegisterLabel.REGISTER_LABEL, "register_label_code_lang_type_key", RegisterLabel.REGISTER_LABEL.CODE, RegisterLabel.REGISTER_LABEL.LANG, RegisterLabel.REGISTER_LABEL.TYPE);
        public static final UniqueKey<UsageRecord> USAGE_PKEY = createUniqueKey(Usage.USAGE, "usage_pkey", Usage.USAGE.ID);
        public static final UniqueKey<WordRecord> WORD_PKEY = createUniqueKey(Word.WORD, "word_pkey", Word.WORD.ID);
    }

    private static class ForeignKeys0 extends AbstractKeys {
        public static final ForeignKey<DefinitionRecord, MeaningRecord> DEFINITION__DEFINITION_MEANING_ID_FKEY = createForeignKey(eki.eve.data.db.Keys.MEANING_PKEY, Definition.DEFINITION, "definition__definition_meaning_id_fkey", Definition.DEFINITION.MEANING_ID);
        public static final ForeignKey<DefinitionRecord, LangRecord> DEFINITION__DEFINITION_LANG_FKEY = createForeignKey(eki.eve.data.db.Keys.LANG_PKEY, Definition.DEFINITION, "definition__definition_lang_fkey", Definition.DEFINITION.LANG);
        public static final ForeignKey<DerivLabelRecord, DerivRecord> DERIV_LABEL__DERIV_LABEL_CODE_FKEY = createForeignKey(eki.eve.data.db.Keys.DERIV_PKEY, DerivLabel.DERIV_LABEL, "deriv_label__deriv_label_code_fkey", DerivLabel.DERIV_LABEL.CODE);
        public static final ForeignKey<DerivLabelRecord, LangRecord> DERIV_LABEL__DERIV_LABEL_LANG_FKEY = createForeignKey(eki.eve.data.db.Keys.LANG_PKEY, DerivLabel.DERIV_LABEL, "deriv_label__deriv_label_lang_fkey", DerivLabel.DERIV_LABEL.LANG);
        public static final ForeignKey<DerivLabelRecord, LabelTypeRecord> DERIV_LABEL__DERIV_LABEL_TYPE_FKEY = createForeignKey(eki.eve.data.db.Keys.LABEL_TYPE_PKEY, DerivLabel.DERIV_LABEL, "deriv_label__deriv_label_type_fkey", DerivLabel.DERIV_LABEL.TYPE);
        public static final ForeignKey<DomainRecord, DomainRecord> DOMAIN__DOMAIN_PARENT_CODE_FKEY = createForeignKey(eki.eve.data.db.Keys.DOMAIN_PKEY, Domain.DOMAIN, "domain__domain_parent_code_fkey", Domain.DOMAIN.PARENT_CODE, Domain.DOMAIN.PARENT_ORIGIN);
        public static final ForeignKey<DomainLabelRecord, DomainRecord> DOMAIN_LABEL__DOMAIN_LABEL_CODE_FKEY = createForeignKey(eki.eve.data.db.Keys.DOMAIN_PKEY, DomainLabel.DOMAIN_LABEL, "domain_label__domain_label_code_fkey", DomainLabel.DOMAIN_LABEL.CODE, DomainLabel.DOMAIN_LABEL.ORIGIN);
        public static final ForeignKey<DomainLabelRecord, LangRecord> DOMAIN_LABEL__DOMAIN_LABEL_LANG_FKEY = createForeignKey(eki.eve.data.db.Keys.LANG_PKEY, DomainLabel.DOMAIN_LABEL, "domain_label__domain_label_lang_fkey", DomainLabel.DOMAIN_LABEL.LANG);
        public static final ForeignKey<DomainLabelRecord, LabelTypeRecord> DOMAIN_LABEL__DOMAIN_LABEL_TYPE_FKEY = createForeignKey(eki.eve.data.db.Keys.LABEL_TYPE_PKEY, DomainLabel.DOMAIN_LABEL, "domain_label__domain_label_type_fkey", DomainLabel.DOMAIN_LABEL.TYPE);
        public static final ForeignKey<FormRecord, ParadigmRecord> FORM__FORM_PARADIGM_ID_FKEY = createForeignKey(eki.eve.data.db.Keys.PARADIGM_PKEY, Form.FORM, "form__form_paradigm_id_fkey", Form.FORM.PARADIGM_ID);
        public static final ForeignKey<FormRecord, MorphRecord> FORM__FORM_MORPH_CODE_FKEY = createForeignKey(eki.eve.data.db.Keys.MORPH_PKEY, Form.FORM, "form__form_morph_code_fkey", Form.FORM.MORPH_CODE);
        public static final ForeignKey<GenderLabelRecord, GenderRecord> GENDER_LABEL__GENDER_LABEL_CODE_FKEY = createForeignKey(eki.eve.data.db.Keys.GENDER_PKEY, GenderLabel.GENDER_LABEL, "gender_label__gender_label_code_fkey", GenderLabel.GENDER_LABEL.CODE);
        public static final ForeignKey<GenderLabelRecord, LangRecord> GENDER_LABEL__GENDER_LABEL_LANG_FKEY = createForeignKey(eki.eve.data.db.Keys.LANG_PKEY, GenderLabel.GENDER_LABEL, "gender_label__gender_label_lang_fkey", GenderLabel.GENDER_LABEL.LANG);
        public static final ForeignKey<GenderLabelRecord, LabelTypeRecord> GENDER_LABEL__GENDER_LABEL_TYPE_FKEY = createForeignKey(eki.eve.data.db.Keys.LABEL_TYPE_PKEY, GenderLabel.GENDER_LABEL, "gender_label__gender_label_type_fkey", GenderLabel.GENDER_LABEL.TYPE);
        public static final ForeignKey<GrammarRecord, LexemeRecord> GRAMMAR__GRAMMAR_LEXEME_ID_FKEY = createForeignKey(eki.eve.data.db.Keys.LEXEME_PKEY, Grammar.GRAMMAR, "grammar__grammar_lexeme_id_fkey", Grammar.GRAMMAR.LEXEME_ID);
        public static final ForeignKey<GrammarRecord, LangRecord> GRAMMAR__GRAMMAR_LANG_FKEY = createForeignKey(eki.eve.data.db.Keys.LANG_PKEY, Grammar.GRAMMAR, "grammar__grammar_lang_fkey", Grammar.GRAMMAR.LANG);
        public static final ForeignKey<LangLabelRecord, LangRecord> LANG_LABEL__LANG_LABEL_CODE_FKEY = createForeignKey(eki.eve.data.db.Keys.LANG_PKEY, LangLabel.LANG_LABEL, "lang_label__lang_label_code_fkey", LangLabel.LANG_LABEL.CODE);
        public static final ForeignKey<LangLabelRecord, LangRecord> LANG_LABEL__LANG_LABEL_LANG_FKEY = createForeignKey(eki.eve.data.db.Keys.LANG_PKEY, LangLabel.LANG_LABEL, "lang_label__lang_label_lang_fkey", LangLabel.LANG_LABEL.LANG);
        public static final ForeignKey<LangLabelRecord, LabelTypeRecord> LANG_LABEL__LANG_LABEL_TYPE_FKEY = createForeignKey(eki.eve.data.db.Keys.LABEL_TYPE_PKEY, LangLabel.LANG_LABEL, "lang_label__lang_label_type_fkey", LangLabel.LANG_LABEL.TYPE);
        public static final ForeignKey<LexRelTypeLabelRecord, LexRelTypeRecord> LEX_REL_TYPE_LABEL__LEX_REL_TYPE_LABEL_CODE_FKEY = createForeignKey(
				eki.eve.data.db.Keys.LEX_REL_TYPE_PKEY, LexRelTypeLabel.LEX_REL_TYPE_LABEL, "lex_rel_type_label__lex_rel_type_label_code_fkey", LexRelTypeLabel.LEX_REL_TYPE_LABEL.CODE);
        public static final ForeignKey<LexRelTypeLabelRecord, LangRecord> LEX_REL_TYPE_LABEL__LEX_REL_TYPE_LABEL_LANG_FKEY = createForeignKey(eki.eve.data.db.Keys.LANG_PKEY, LexRelTypeLabel.LEX_REL_TYPE_LABEL, "lex_rel_type_label__lex_rel_type_label_lang_fkey", LexRelTypeLabel.LEX_REL_TYPE_LABEL.LANG);
        public static final ForeignKey<LexRelTypeLabelRecord, LabelTypeRecord> LEX_REL_TYPE_LABEL__LEX_REL_TYPE_LABEL_TYPE_FKEY = createForeignKey(
				eki.eve.data.db.Keys.LABEL_TYPE_PKEY, LexRelTypeLabel.LEX_REL_TYPE_LABEL, "lex_rel_type_label__lex_rel_type_label_type_fkey", LexRelTypeLabel.LEX_REL_TYPE_LABEL.TYPE);
        public static final ForeignKey<LexRelationRecord, LexemeRecord> LEX_RELATION__LEX_RELATION_LEXEME1_ID_FKEY = createForeignKey(eki.eve.data.db.Keys.LEXEME_PKEY, LexRelation.LEX_RELATION, "lex_relation__lex_relation_lexeme1_id_fkey", LexRelation.LEX_RELATION.LEXEME1_ID);
        public static final ForeignKey<LexRelationRecord, LexemeRecord> LEX_RELATION__LEX_RELATION_LEXEME2_ID_FKEY = createForeignKey(eki.eve.data.db.Keys.LEXEME_PKEY, LexRelation.LEX_RELATION, "lex_relation__lex_relation_lexeme2_id_fkey", LexRelation.LEX_RELATION.LEXEME2_ID);
        public static final ForeignKey<LexRelationRecord, LexRelTypeRecord> LEX_RELATION__LEX_RELATION_LEX_REL_TYPE_CODE_FKEY = createForeignKey(
				eki.eve.data.db.Keys.LEX_REL_TYPE_PKEY, LexRelation.LEX_RELATION, "lex_relation__lex_relation_lex_rel_type_code_fkey", LexRelation.LEX_RELATION.LEX_REL_TYPE_CODE);
        public static final ForeignKey<LexemeRecord, WordRecord> LEXEME__LEXEME_WORD_ID_FKEY = createForeignKey(eki.eve.data.db.Keys.WORD_PKEY, Lexeme.LEXEME, "lexeme__lexeme_word_id_fkey", Lexeme.LEXEME.WORD_ID);
        public static final ForeignKey<LexemeRecord, MeaningRecord> LEXEME__LEXEME_MEANING_ID_FKEY = createForeignKey(eki.eve.data.db.Keys.MEANING_PKEY, Lexeme.LEXEME, "lexeme__lexeme_meaning_id_fkey", Lexeme.LEXEME.MEANING_ID);
        public static final ForeignKey<LexemeDerivRecord, LexemeRecord> LEXEME_DERIV__LEXEME_DERIV_LEXEME_ID_FKEY = createForeignKey(eki.eve.data.db.Keys.LEXEME_PKEY, LexemeDeriv.LEXEME_DERIV, "lexeme_deriv__lexeme_deriv_lexeme_id_fkey", LexemeDeriv.LEXEME_DERIV.LEXEME_ID);
        public static final ForeignKey<LexemeDerivRecord, DerivRecord> LEXEME_DERIV__LEXEME_DERIV_DERIV_CODE_FKEY = createForeignKey(eki.eve.data.db.Keys.DERIV_PKEY, LexemeDeriv.LEXEME_DERIV, "lexeme_deriv__lexeme_deriv_deriv_code_fkey", LexemeDeriv.LEXEME_DERIV.DERIV_CODE);
        public static final ForeignKey<LexemeDomainRecord, LexemeRecord> LEXEME_DOMAIN__LEXEME_DOMAIN_LEXEME_ID_FKEY = createForeignKey(eki.eve.data.db.Keys.LEXEME_PKEY, LexemeDomain.LEXEME_DOMAIN, "lexeme_domain__lexeme_domain_lexeme_id_fkey", LexemeDomain.LEXEME_DOMAIN.LEXEME_ID);
        public static final ForeignKey<LexemeDomainRecord, DomainRecord> LEXEME_DOMAIN__LEXEME_DOMAIN_DOMAIN_CODE_FKEY = createForeignKey(eki.eve.data.db.Keys.DOMAIN_PKEY, LexemeDomain.LEXEME_DOMAIN, "lexeme_domain__lexeme_domain_domain_code_fkey", LexemeDomain.LEXEME_DOMAIN.DOMAIN_CODE, LexemeDomain.LEXEME_DOMAIN.DOMAIN_ORIGIN);
        public static final ForeignKey<LexemePosRecord, LexemeRecord> LEXEME_POS__LEXEME_POS_LEXEME_ID_FKEY = createForeignKey(eki.eve.data.db.Keys.LEXEME_PKEY, LexemePos.LEXEME_POS, "lexeme_pos__lexeme_pos_lexeme_id_fkey", LexemePos.LEXEME_POS.LEXEME_ID);
        public static final ForeignKey<LexemePosRecord, PosRecord> LEXEME_POS__LEXEME_POS_POS_CODE_FKEY = createForeignKey(eki.eve.data.db.Keys.POS_PKEY, LexemePos.LEXEME_POS, "lexeme_pos__lexeme_pos_pos_code_fkey", LexemePos.LEXEME_POS.POS_CODE);
        public static final ForeignKey<LexemeRegisterRecord, LexemeRecord> LEXEME_REGISTER__LEXEME_REGISTER_LEXEME_ID_FKEY = createForeignKey(eki.eve.data.db.Keys.LEXEME_PKEY, LexemeRegister.LEXEME_REGISTER, "lexeme_register__lexeme_register_lexeme_id_fkey", LexemeRegister.LEXEME_REGISTER.LEXEME_ID);
        public static final ForeignKey<LexemeRegisterRecord, RegisterRecord> LEXEME_REGISTER__LEXEME_REGISTER_REGISTER_CODE_FKEY = createForeignKey(
				eki.eve.data.db.Keys.REGISTER_PKEY, LexemeRegister.LEXEME_REGISTER, "lexeme_register__lexeme_register_register_code_fkey", LexemeRegister.LEXEME_REGISTER.REGISTER_CODE);
        public static final ForeignKey<MorphLabelRecord, MorphRecord> MORPH_LABEL__MORPH_LABEL_CODE_FKEY = createForeignKey(eki.eve.data.db.Keys.MORPH_PKEY, MorphLabel.MORPH_LABEL, "morph_label__morph_label_code_fkey", MorphLabel.MORPH_LABEL.CODE);
        public static final ForeignKey<MorphLabelRecord, LangRecord> MORPH_LABEL__MORPH_LABEL_LANG_FKEY = createForeignKey(eki.eve.data.db.Keys.LANG_PKEY, MorphLabel.MORPH_LABEL, "morph_label__morph_label_lang_fkey", MorphLabel.MORPH_LABEL.LANG);
        public static final ForeignKey<MorphLabelRecord, LabelTypeRecord> MORPH_LABEL__MORPH_LABEL_TYPE_FKEY = createForeignKey(eki.eve.data.db.Keys.LABEL_TYPE_PKEY, MorphLabel.MORPH_LABEL, "morph_label__morph_label_type_fkey", MorphLabel.MORPH_LABEL.TYPE);
        public static final ForeignKey<ParadigmRecord, WordRecord> PARADIGM__PARADIGM_WORD_ID_FKEY = createForeignKey(eki.eve.data.db.Keys.WORD_PKEY, Paradigm.PARADIGM, "paradigm__paradigm_word_id_fkey", Paradigm.PARADIGM.WORD_ID);
        public static final ForeignKey<PosLabelRecord, PosRecord> POS_LABEL__POS_LABEL_CODE_FKEY = createForeignKey(eki.eve.data.db.Keys.POS_PKEY, PosLabel.POS_LABEL, "pos_label__pos_label_code_fkey", PosLabel.POS_LABEL.CODE);
        public static final ForeignKey<PosLabelRecord, LangRecord> POS_LABEL__POS_LABEL_LANG_FKEY = createForeignKey(eki.eve.data.db.Keys.LANG_PKEY, PosLabel.POS_LABEL, "pos_label__pos_label_lang_fkey", PosLabel.POS_LABEL.LANG);
        public static final ForeignKey<PosLabelRecord, LabelTypeRecord> POS_LABEL__POS_LABEL_TYPE_FKEY = createForeignKey(eki.eve.data.db.Keys.LABEL_TYPE_PKEY, PosLabel.POS_LABEL, "pos_label__pos_label_type_fkey", PosLabel.POS_LABEL.TYPE);
        public static final ForeignKey<RectionRecord, LexemeRecord> RECTION__RECTION_LEXEME_ID_FKEY = createForeignKey(eki.eve.data.db.Keys.LEXEME_PKEY, Rection.RECTION, "rection__rection_lexeme_id_fkey", Rection.RECTION.LEXEME_ID);
        public static final ForeignKey<RegisterLabelRecord, RegisterRecord> REGISTER_LABEL__REGISTER_LABEL_CODE_FKEY = createForeignKey(eki.eve.data.db.Keys.REGISTER_PKEY, RegisterLabel.REGISTER_LABEL, "register_label__register_label_code_fkey", RegisterLabel.REGISTER_LABEL.CODE);
        public static final ForeignKey<RegisterLabelRecord, LangRecord> REGISTER_LABEL__REGISTER_LABEL_LANG_FKEY = createForeignKey(eki.eve.data.db.Keys.LANG_PKEY, RegisterLabel.REGISTER_LABEL, "register_label__register_label_lang_fkey", RegisterLabel.REGISTER_LABEL.LANG);
        public static final ForeignKey<RegisterLabelRecord, LabelTypeRecord> REGISTER_LABEL__REGISTER_LABEL_TYPE_FKEY = createForeignKey(eki.eve.data.db.Keys.LABEL_TYPE_PKEY, RegisterLabel.REGISTER_LABEL, "register_label__register_label_type_fkey", RegisterLabel.REGISTER_LABEL.TYPE);
        public static final ForeignKey<UsageRecord, RectionRecord> USAGE__USAGE_RECTION_ID_FKEY = createForeignKey(eki.eve.data.db.Keys.RECTION_PKEY, Usage.USAGE, "usage__usage_rection_id_fkey", Usage.USAGE.RECTION_ID);
        public static final ForeignKey<WordRecord, LangRecord> WORD__WORD_LANG_FKEY = createForeignKey(eki.eve.data.db.Keys.LANG_PKEY, Word.WORD, "word__word_lang_fkey", Word.WORD.LANG);
        public static final ForeignKey<WordRecord, MorphRecord> WORD__WORD_MORPH_CODE_FKEY = createForeignKey(eki.eve.data.db.Keys.MORPH_PKEY, Word.WORD, "word__word_morph_code_fkey", Word.WORD.MORPH_CODE);
    }
}
