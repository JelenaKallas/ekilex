/*
 * This file is generated by jOOQ.
*/
package eki.eve.data.db.tables;


import eki.eve.data.db.Indexes;
import eki.eve.data.db.Keys;
import eki.eve.data.db.Public;
import eki.eve.data.db.tables.records.LexRelationDatasetRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class LexRelationDataset extends TableImpl<LexRelationDatasetRecord> {

    private static final long serialVersionUID = -269903830;

    /**
     * The reference instance of <code>public.lex_relation_dataset</code>
     */
    public static final LexRelationDataset LEX_RELATION_DATASET = new LexRelationDataset();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<LexRelationDatasetRecord> getRecordType() {
        return LexRelationDatasetRecord.class;
    }

    /**
     * The column <code>public.lex_relation_dataset.lex_relation_id</code>.
     */
    public final TableField<LexRelationDatasetRecord, Long> LEX_RELATION_ID = createField("lex_relation_id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>public.lex_relation_dataset.dataset_code</code>.
     */
    public final TableField<LexRelationDatasetRecord, String> DATASET_CODE = createField("dataset_code", org.jooq.impl.SQLDataType.VARCHAR(10).nullable(false), this, "");

    /**
     * Create a <code>public.lex_relation_dataset</code> table reference
     */
    public LexRelationDataset() {
        this(DSL.name("lex_relation_dataset"), null);
    }

    /**
     * Create an aliased <code>public.lex_relation_dataset</code> table reference
     */
    public LexRelationDataset(String alias) {
        this(DSL.name(alias), LEX_RELATION_DATASET);
    }

    /**
     * Create an aliased <code>public.lex_relation_dataset</code> table reference
     */
    public LexRelationDataset(Name alias) {
        this(alias, LEX_RELATION_DATASET);
    }

    private LexRelationDataset(Name alias, Table<LexRelationDatasetRecord> aliased) {
        this(alias, aliased, null);
    }

    private LexRelationDataset(Name alias, Table<LexRelationDatasetRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.LEX_RELATION_DATASET_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<LexRelationDatasetRecord> getPrimaryKey() {
        return Keys.LEX_RELATION_DATASET_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<LexRelationDatasetRecord>> getKeys() {
        return Arrays.<UniqueKey<LexRelationDatasetRecord>>asList(Keys.LEX_RELATION_DATASET_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<LexRelationDatasetRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<LexRelationDatasetRecord, ?>>asList(Keys.LEX_RELATION_DATASET__LEX_RELATION_DATASET_LEX_RELATION_ID_FKEY, Keys.LEX_RELATION_DATASET__LEX_RELATION_DATASET_DATASET_CODE_FKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LexRelationDataset as(String alias) {
        return new LexRelationDataset(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LexRelationDataset as(Name alias) {
        return new LexRelationDataset(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public LexRelationDataset rename(String name) {
        return new LexRelationDataset(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public LexRelationDataset rename(Name name) {
        return new LexRelationDataset(name, null);
    }
}
