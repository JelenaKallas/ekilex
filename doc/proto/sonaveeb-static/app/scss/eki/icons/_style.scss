@import "variables";

@font-face {
  font-family: 'material-icons';
  src:
    url('#{$icomoon-font-path}/material-icons.ttf?gmj77c') format('truetype'),
    url('#{$icomoon-font-path}/material-icons.woff?gmj77c') format('woff'),
    url('#{$icomoon-font-path}/material-icons.svg?gmj77c#material-icons') format('svg');
  font-weight: normal;
  font-style: normal;
}

[class^="icon-"], [class*=" icon-"] {
  /* use !important to prevent issues with browser extensions that change fonts */
  font-family: 'material-icons' !important;
  speak: none;
  font-style: normal;
  font-weight: normal;
  font-variant: normal;
  text-transform: none;
  line-height: 1;

  /* Better Font Rendering =========== */
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

@function unicode($str) {
  @return unquote("\"") + $str + unquote("\"");
}

.icon-logo {
  &:before {
    content: unicode($icon-logo); 
  }
}
.icon-logo-s {
  &:before {
    content: unicode($icon-logo-s); 
  }
}
.icon-logo-type {
  &:before {
    content: unicode($icon-logo-type); 
  }
}
.icon-menu {
  &:before {
    content: unicode($icon-menu); 
  }
}
.icon-close {
  &:before {
    content: unicode($icon-close); 
  }
}
.icon-caret-down {
  &:before {
    content: unicode($icon-caret-down); 
  }
}
.icon-mic {
  &:before {
    content: unicode($icon-mic); 
  }
}
.icon-search {
  &:before {
    content: unicode($icon-search); 
  }
}
.icon-speaker {
  &:before {
    content: unicode($icon-speaker); 
  }
}
.icon-arrow-right {
  &:before {
    content: unicode($icon-arrow-right); 
  }
}
.icon-add {
  &:before {
    content: unicode($icon-add); 
  }
}
.icon-chevron-left {
  &:before {
    content: unicode($icon-chevron-left); 
  }
}
.icon-chevron-right {
  &:before {
    content: unicode($icon-chevron-right); 
  }
}
.icon-back {
  &:before {
    content: unicode($icon-back); 
  }
}

